# Example schema showcasing various GraphQL features

"""Available user roles"""
enum Role {
  ADMIN
  USER
}

"""Common interface implemented by resource types"""
interface Node {
  id: ID!
}

"""User account"""
type User implements Node {
  id: ID!
  name: String!
  role: Role!
  posts: [Post!]!
}

"""Blog post"""
type Post implements Node {
  id: ID!
  title: String!
  content: String!
  author: User!
}

"""Query root"""
type Query {
  user(id: ID!): User
  posts: [Post!]!
}

"""Input for creating a new post"""
input PostInput {
  title: String!
  content: String!
}

"""Mutation root"""
type Mutation {
  createPost(input: PostInput!): Post!
  login(username: String!, password: String!): AuthResult!
}

"""Successful authentication"""
type AuthSuccess {
  token: String!
  user: User!
}

"""Authentication failure"""
type AuthError {
  message: String!
}

"""Result of the login mutation"""
union AuthResult = AuthSuccess | AuthError
